#ESEMPIO 1

# Numero esempi
    m = 2

    # Input: 2 esempi con 3 features ciascuno
    X = np.array([
        [1.0, 0.0, 0.0],  # esempio 1
        [0.0, 1.0, 1.0]   # esempio 2
    ])

    Y = [1, 1]

    # Architettura: 1 hidden layer (4 neuroni), 1 output layer (3 classi)
    # Pesi e bias
    W = [
        np.ones((4, 3)),       # Layer 0 (4 neuroni, 3 input)
        np.array([             # Layer 1 (3 classi, 4 neuroni)
            [0.1, 0.1, 0.1, 0.1],   # pesi per classe 0
            [1.0, 1.0, 1.0, 1.0],   # pesi per classe 1 (più alti)
            [0.2, 0.2, 0.2, 0.2]    # pesi per classe 2
        ])
    ]

    b = [
        np.zeros((4,)),      # Bias per hidden layer
        np.zeros((3,))       # Bias per output layer
    ]   


# ESEMPIO 2

# Numero esempi
    m = 2

    # Input: 2 esempi con 3 features ciascuno
    X = np.array([
        [1.0, 0.0, 0.0],  # esempio 1
        [0.0, 1.0, 1.0]   # esempio 2
    ])

    Y = np.array([1, 1])  # Etichette (classe 1 per entrambi)
    num_classes = 3       # Numero di classi totali

    # One-hot encoding dinamico
    Y_one_hot = np.eye(num_classes)[Y]

    print(Y_one_hot)

    # Architettura: 1 hidden layer (4 neuroni), 1 output layer (3 classi)
    # Pesi e bias
    W = [
        np.ones((4, 3)),       # Layer 0 (4 neuroni, 3 input)
        np.array([             # Layer 1 (3 classi, 4 neuroni)
            [0.1, 0.1, 0.1, 0.1],   # pesi per classe 0
            [1.0, 1.0, 1.0, 1.0],   # pesi per classe 1 (più alti)
            [0.2, 0.2, 0.2, 0.2]    # pesi per classe 2
        ])
    ]

    b = [
        np.zeros((4,)),      # Bias per hidden layer
        np.zeros((3,))       # Bias per output layer
    ]   
